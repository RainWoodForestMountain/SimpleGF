//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameFramework_MessageWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameFramework.Message), null);
		L.RegFunction("ToString", ToString);
		L.RegFunction("New", _CreateGameFramework_Message);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("id", get_id, null);
		L.RegVar("body", get_body, null);
		L.RegVar("msgType", get_msgType, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGameFramework_Message(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				long arg0 = LuaDLL.tolua_checkint64(L, 1);
				GameFramework.MessageType arg1 = (GameFramework.MessageType)ToLua.CheckObject(L, 2, typeof(GameFramework.MessageType));
				GameFramework.IMessageBody arg2 = (GameFramework.IMessageBody)ToLua.CheckObject<GameFramework.IMessageBody>(L, 3);
				GameFramework.Message obj = new GameFramework.Message(arg0, arg1, arg2);
				ToLua.PushValue(L, obj);
				return 1;
			}
			else if (count == 0)
			{
				GameFramework.Message obj = new GameFramework.Message();
				ToLua.PushValue(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GameFramework.Message.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameFramework.Message obj = (GameFramework.Message)ToLua.CheckObject(L, 1, typeof(GameFramework.Message));
			string o = obj.ToString();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_id(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.Message obj = (GameFramework.Message)o;
			long ret = obj.id;
			LuaDLL.tolua_pushint64(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index id on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_body(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.Message obj = (GameFramework.Message)o;
			GameFramework.IMessageBody ret = obj.body;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index body on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_msgType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.Message obj = (GameFramework.Message)o;
			GameFramework.MessageType ret = obj.msgType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index msgType on a nil value");
		}
	}
}

