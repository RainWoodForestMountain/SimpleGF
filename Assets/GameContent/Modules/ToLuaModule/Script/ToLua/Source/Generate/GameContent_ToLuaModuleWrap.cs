//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameContent_ToLuaModuleWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameContent.ToLuaModule), typeof(GameFramework.ModuleBase));
		L.RegFunction("Init", Init);
		L.RegFunction("Destroy", Destroy);
		L.RegFunction("DoFile", DoFile);
		L.RegFunction("CallFunction", CallFunction);
		L.RegFunction("LuaGC", LuaGC);
		L.RegFunction("ReadFile", ReadFile);
		L.RegFunction("New", _CreateGameContent_ToLuaModule);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGameContent_ToLuaModule(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				GameContent.ToLuaModule obj = new GameContent.ToLuaModule();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GameContent.ToLuaModule.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameContent.ToLuaModule obj = (GameContent.ToLuaModule)ToLua.CheckObject<GameContent.ToLuaModule>(L, 1);
			long arg0 = LuaDLL.tolua_checkint64(L, 2);
			obj.Init(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Destroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameContent.ToLuaModule obj = (GameContent.ToLuaModule)ToLua.CheckObject<GameContent.ToLuaModule>(L, 1);
			obj.Destroy();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DoFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameContent.ToLuaModule obj = (GameContent.ToLuaModule)ToLua.CheckObject<GameContent.ToLuaModule>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			object[] o = obj.DoFile(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CallFunction(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			GameContent.ToLuaModule obj = (GameContent.ToLuaModule)ToLua.CheckObject<GameContent.ToLuaModule>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			object[] arg1 = ToLua.ToParamsObject(L, 3, count - 2);
			object[] o = obj.CallFunction(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaGC(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameContent.ToLuaModule obj = (GameContent.ToLuaModule)ToLua.CheckObject<GameContent.ToLuaModule>(L, 1);
			obj.LuaGC();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReadFile(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				GameContent.ToLuaModule obj = (GameContent.ToLuaModule)ToLua.CheckObject<GameContent.ToLuaModule>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				byte[] o = obj.ReadFile(arg0);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3)
			{
				GameContent.ToLuaModule obj = (GameContent.ToLuaModule)ToLua.CheckObject<GameContent.ToLuaModule>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				byte[] o = obj.ReadFile(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: GameContent.ToLuaModule.ReadFile");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

