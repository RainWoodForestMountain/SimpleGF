//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameFramework_ChannelDataPackageWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameFramework.ChannelDataPackage), typeof(System.Object));
		L.RegFunction("New", _CreateGameFramework_ChannelDataPackage);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("channelID", get_channelID, set_channelID);
		L.RegVar("appName", get_appName, set_appName);
		L.RegVar("wxappID", get_wxappID, set_wxappID);
		L.RegVar("buglyIOSID", get_buglyIOSID, set_buglyIOSID);
		L.RegVar("buglyAndroidID", get_buglyAndroidID, set_buglyAndroidID);
		L.RegVar("talkingDataID", get_talkingDataID, set_talkingDataID);
		L.RegVar("shareID", get_shareID, set_shareID);
		L.RegVar("sharesecID", get_sharesecID, set_sharesecID);
		L.RegVar("ocAppTeamID", get_ocAppTeamID, set_ocAppTeamID);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGameFramework_ChannelDataPackage(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				GameFramework.ChannelDataPackage obj = new GameFramework.ChannelDataPackage();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GameFramework.ChannelDataPackage.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_channelID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.ChannelDataPackage obj = (GameFramework.ChannelDataPackage)o;
			int ret = obj.channelID;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index channelID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_appName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.ChannelDataPackage obj = (GameFramework.ChannelDataPackage)o;
			string ret = obj.appName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index appName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_wxappID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.ChannelDataPackage obj = (GameFramework.ChannelDataPackage)o;
			string ret = obj.wxappID;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index wxappID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_buglyIOSID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.ChannelDataPackage obj = (GameFramework.ChannelDataPackage)o;
			string ret = obj.buglyIOSID;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index buglyIOSID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_buglyAndroidID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.ChannelDataPackage obj = (GameFramework.ChannelDataPackage)o;
			string ret = obj.buglyAndroidID;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index buglyAndroidID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_talkingDataID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.ChannelDataPackage obj = (GameFramework.ChannelDataPackage)o;
			string ret = obj.talkingDataID;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index talkingDataID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_shareID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.ChannelDataPackage obj = (GameFramework.ChannelDataPackage)o;
			string ret = obj.shareID;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index shareID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sharesecID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.ChannelDataPackage obj = (GameFramework.ChannelDataPackage)o;
			string ret = obj.sharesecID;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index sharesecID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ocAppTeamID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.ChannelDataPackage obj = (GameFramework.ChannelDataPackage)o;
			string ret = obj.ocAppTeamID;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ocAppTeamID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_channelID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.ChannelDataPackage obj = (GameFramework.ChannelDataPackage)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.channelID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index channelID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_appName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.ChannelDataPackage obj = (GameFramework.ChannelDataPackage)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.appName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index appName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_wxappID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.ChannelDataPackage obj = (GameFramework.ChannelDataPackage)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.wxappID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index wxappID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_buglyIOSID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.ChannelDataPackage obj = (GameFramework.ChannelDataPackage)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.buglyIOSID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index buglyIOSID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_buglyAndroidID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.ChannelDataPackage obj = (GameFramework.ChannelDataPackage)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.buglyAndroidID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index buglyAndroidID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_talkingDataID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.ChannelDataPackage obj = (GameFramework.ChannelDataPackage)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.talkingDataID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index talkingDataID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_shareID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.ChannelDataPackage obj = (GameFramework.ChannelDataPackage)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.shareID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index shareID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sharesecID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.ChannelDataPackage obj = (GameFramework.ChannelDataPackage)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.sharesecID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index sharesecID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ocAppTeamID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.ChannelDataPackage obj = (GameFramework.ChannelDataPackage)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.ocAppTeamID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ocAppTeamID on a nil value");
		}
	}
}

