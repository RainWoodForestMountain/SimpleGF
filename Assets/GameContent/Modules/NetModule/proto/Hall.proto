
syntax = "proto2";

package hall ;

// ============================================================================================
// 
// 消息id
// 
// ============================================================================================
enum MsgID
{
	option allow_alias = true ;

	MsgID_Min                           = 100 ;
	MsgID_Max                           = 10000 ;
	
	// 用户注册
	MsgID_RegisterReq                   = 100 ;
	MsgID_RegisterAck                   = 101 ;
	
	// 用户登录
	MsgID_LoginReq                      = 102 ;
	MsgID_LoginAck                      = 103 ;
	
	// 用户进入大厅
	MsgID_EnterHallReq                  = 104 ;
	MsgID_EnterHallAck                  = 105 ;
	
	// 存钱
	MsgID_SaveMoneyReq                  = 106 ;
	MsgID_SaveMoneyAck                  = 107 ;
	
	// 取钱
	MsgID_WithdrawMoneyReq              = 108 ;
	MsgID_WithdrawMoneyAck              = 109 ;
	
	// 存定位信息
	MsgID_SaveLocationReq               = 110 ;
	MsgID_SaveLocationAck               = 111 ;
	
	// 获取战绩信息
	MsgID_GetFightingReq                = 112 ;
	MsgID_GetFightingAck                = 113 ;
	
	// 获取排行榜
	MsgID_GetRankReq                    = 114 ;
	MsgID_GetRankAck                    = 115 ;
	
	// 获取公告
	MsgID_GetNotesReq                   = 116 ;
	MsgID_GetNotesAck                   = 117 ;
	
	// 充值核对
	MsgID_CheckPaymentReq               = 118 ;
	MsgID_CheckPaymentAck               = 119 ;
	
	// 获取邮件
	MsgID_GetEmailReq                   = 120 ;
	MsgID_GetEmailAck                   = 121 ;
	
	// 领取邮件附件
	MsgID_GetAttachmentReq              = 122 ;
	MsgID_GetAttachmentAck              = 123 ;
	
	// 获取商品列表
	MsgID_ShopReq                  		= 124 ;
	MsgID_ShopAck                  		= 125 ;
	
	// 设置邮件已读
	MsgID_SetEmailReadReq               = 126 ;
	MsgID_SetEmailReadAck               = 127 ;
	
	// 修改签名
	MsgID_AlertSignReq                  = 128 ;
	MsgID_AlertSignAck                  = 129 ;
	
	// 获取游戏属性
	MsgID_GetGameAttributeReq           = 130 ;
	MsgID_GetGameAttributeAck           = 131 ;
	
	// 发验证码
	MsgID_SendCodeReq                   = 132 ;
	MsgID_SendCodeAck                   = 133 ;
	
	// 修改取款密码
	MsgID_AlertSafePasswordReq          = 134 ;
	MsgID_AlertSafePasswordAck          = 135 ;
	
	// 获取系统配置
	MsgID_GetSystemConfigReq            = 136 ;
	MsgID_GetSystemConfigAck            = 137 ;
	
	// 保存身份证
	MsgID_SaveIDReq                  	= 138 ;
	MsgID_SaveIDAck                  	= 139 ;
	
	// 读取身份证
	MsgID_GetIDReq                  	= 140 ;
	MsgID_GetIDAck                  	= 141 ;
	
	// 对局榜
	MsgID_FightingRankReq               = 142 ;
	MsgID_FightingRankAck               = 143 ;
	
	// 申请代理
	MsgID_RequestAgenceReq              = 144 ;
	MsgID_RequestAgenceAck              = 145 ;
	
	// 判断代理
	MsgID_CheckAgenceReq                = 146 ;
	MsgID_CheckAgenceAck                = 147 ;
	
	// 获取客服信息
	MsgID_GetCustomServiceReq           = 148 ;
	MsgID_GetCustomServiceAck           = 149 ;

	// 快速开始
	MsgID_QuickStartReq                 = 150 ;
	MsgID_QuickStartAck                 = 151 ;
	
	//获取房间列表
	MsgID_GetRoomListsReq				= 154 ;
	MsgID_GetRoomListsAck				= 155 ;
	
	//获取对局详细信息
	MsgID_GetFightingDetialReq			= 156 ;
	MsgID_GetFightingDetialAck			= 157 ;
	
	//广播消息
	MsgID_BroadcastNtf					= 159 ;
	
	//用户下线通知消息
	MsgID_UserOfflineNtf			    = 160 ;
    //获取比赛列表
    MsgID_GetMatchListReq               = 161 ;
    MsgID_GetMatchListAck               = 162 ;


	//获取比赛录像信息
	MsgID_GetFightingVideoReq			= 163 ;
	MsgID_GetFightingVideoAck			= 164;

	//获取奖品中心信息
	MsgID_GetPrizeCenterReq				= 165 ;
	MsgID_GetPrizeCenterAck				= 166 ;

	//兑换奖品信息
	MsgID_UseItemReq					= 167 ;
	MsgID_UseItemAck					= 168 ;

	//获取背包信息
	MsgID_GetBagReq						= 169 ;
	MsgID_GetBagAck						= 170 ;
	
	//保存收货地址 
	MsgID_SaveShippingReq				= 171 ;
	MsgID_SaveShippingAck				= 172 ;
	
	//获取收货地址 
	MsgID_GetShippingReq				= 173 ;
	MsgID_GetShippingAck				= 174 ;


	//获取物品配置
	MsgID_GetGoodsConfigReq				= 175 ;
	MsgID_GetGoodsConfigAck				= 176 ;

	
	//获取兑奖记录
	MsgID_GetPrizeRecordReq				= 177 ;
	MsgID_GetPrizeRecordAck				= 178 ;

	//获取玩家货币
	MsgID_GetCurrencyReq				= 179 ;
	MsgID_GetCurrencyAck				= 180 ;

	//获取活动中心请求
	MsgID_GetActivityCenterReq			= 181 ;
	MsgID_GetActivityCenterAck			= 182 ;

	//获取玩家信息请求
	MsgID_GetUserDataReq				= 183 ;
	MsgID_GetUserDataAck				= 184 ;
	
	//平台请求
	MsgID_PlatReq				        = 185 ;
	MsgID_PlatAck				        = 186 ;


	//小贴士请求
	MsgID_GetJokeReq				   	= 187 ;
	MsgID_GetJokeAck				    = 188 ;

	//获取在线人数请求
	MsgID_GetOnLineCountReq				= 189 ;
	MsgID_GetOnLineCountAck				= 190 ;

	//获取最新事件
	MsgID_LastEventsReq 				= 191 ;
	MsgID_LastEventsAck					= 192 ;
}

enum LoginType
{
	Udd_Tempuser = 0 ; // 游客登录
	Udd_Binduser = 1 ; // 正式用户登录
	Udd_Robot    = 2 ; // 机器人登录
}

// ============================================================================================
// 
// 服务器之间的认证请求消息
// server->server
// 
// ============================================================================================
message RegisterReq
{	
	required string account           = 1 ; // 账号
	required string password          = 2 ; // 密码
}

// ============================================================================================
// 
// 服务器之间的认证响应消息
// server->server
// 
// ============================================================================================
message RegisterACK
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
	}
	
	required Result result            = 1 ; // 结果
}

// ============================================================================================
// 
// 到Gate服务登录的消息
// user->gate
// 
// ============================================================================================
message LoginReq
{	
	optional string wxverifycode = 1 ;	// 调用微信登录验证接口
	optional string deviceInfo   = 2 ;	// 手机设备信息和客户端版本号
	optional int32  channel_id   = 3 ;  // 渠道号码
}

// ============================================================================================
// 
// 登录的回复消息
// gate->user
// 
// ============================================================================================
message LoginAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
	}
	
	optional Result result    = 1 ; // 结果
	optional uint64 usertoken = 2 ; // 令牌
	optional string nickname  = 3 ; // 昵称
	optional string wxheadurl = 4 ; // 头像
	optional int32  sex    	  = 5 ; // 性别
	optional int32  roomid    = 6 ; // 游戏房间ID
	optional string token     = 7 ; // 授权token
	optional int64	money	  = 8 ; //身上金币
	optional int64  insurance = 9 ; //保险箱
	optional string description=10; //签名
	optional int32  userid    = 11; //用户id
	optional string agentnick = 12; //代理商人
	optional string mobile    = 13;	//电话号码
	optional string remote_ip = 14; //ip
	optional string wxid      = 15; //微信
	optional int32 coupon    = 16; //奖券
	optional int32 coin      = 17; //钻石
	optional int32 charm      = 18; //魅力值
	optional int32 dissolute  = 19; //风流值
	optional int32 playing_time = 20; //游戏时长
	optional int32 win_gold 	= 21; //累积赢得金币
	optional int32 match 		= 22; //比赛券
	optional string first_charge = 23; //是否是首充(json格式)
	optional int32 level 		= 24; //等级积分
	optional int32 strength 	= 25 ; //实力积分 
}

// ============================================================================================
// 
// 进入大厅请求
// user->gate
// 
// ============================================================================================
message EnterHallReq
{
	required string token = 1 ; //令牌
}

//游戏节点信息
message GameNode
{
	required int32 gid = 1 ; //游戏id
	required int32 state = 2 ; //游戏状态:0-正常，1:故障，2--关闭 
}

// ============================================================================================
// 
// 进入大厅回复消息
// gate->user
// 
// ============================================================================================
message EnterHallAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result    = 1 ; // 结果
	optional int32 game_id_count = 2 ; //游戏id数量
	repeated GameNode games   = 3 ; //游戏节点
}
// ============================================================================================
// 
// 存钱请求
// user->gate
// 
// ============================================================================================
message SaveMoneyReq
{
	required string token = 1 ; //令牌
	required int64 money  = 2 ; //金币	
}

// ============================================================================================
// 
// 存钱回复消息
// gate->user
// 
// ============================================================================================
message SaveMoneyAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result    = 1 ; // 结果
	optional int64  money     = 2 ; //金币
	optional int64  insurance = 3 ; //保险箱
}
// ============================================================================================
// 
// 取钱请求
// user->gate
// 
// ============================================================================================
message WithdrawMoneyReq
{
	required string token = 1 ; //令牌
	required int64 money  = 2 ; //金币	
	required string password = 3 ; //密码
}

// ============================================================================================
// 
// 取钱回复消息
// gate->user
// 
// ============================================================================================
message WithdrawMoneyAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
		PASSWORD   = 3 ;    //密码错误
	}
	
	optional Result result    = 1 ; // 结果
	optional int64  money     = 2 ; //金币
	optional int64  insurance = 3 ; //保险箱
}

// ============================================================================================
// 
// 保存定位信息请求
// user->gate
// 
// ============================================================================================
message SaveLocationReq
{
	required string token = 1 ; //令牌
	required string location = 2 ; //定位信息 
}

// ============================================================================================
// 
// 保存定位信息回复消息
// gate->user
// 
// ============================================================================================
message SaveLocationAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result    = 1 ; // 结果
}
// ============================================================================================
// 
// 获取战绩请求
// user->gate
// 
// ============================================================================================
message GetFightingReq
{
	required string token = 1 ; //令牌
	required int32 offset = 2 ; //偏移
	required int32 count  = 3 ; //数量
	required int32 gid    = 4 ; //游戏id，0表示获取所有
}

message FightingItemOpponent
{
	required int32 user_id   = 1 ; //用户id
	required string headurl  = 2 ; //用户头像
	required string nickname = 3 ; //用户昵称 
}

message FightingItem
{
	required int32 gid        = 1 ; //游戏id
	required int32 win_status = 2 ; //输赢状态 
	required string setup     = 3 ; //配置信息
	required int64 amount     = 4 ; //输赢金额
	required string create_time = 5 ; //战绩时间
	optional string card_type = 6 ; //牌型
	optional string fight_id = 7; //战绩id
	optional string comment = 8; //部分信息
	required int32 strength = 9 ; //实力积分 
	required int32 level = 10 ; //等级积分 
}

// ============================================================================================
// 
// 获取战绩回复消息
// gate->user
// 
// ============================================================================================
message GetFightingAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result    = 1 ; // 结果
	optional int32  count     = 2 ; //条数
	repeated FightingItem items = 3 ; //战绩信息
}

// ============================================================================================
// 
// 获取排行榜请求
// user->gate
// 
// ============================================================================================
message GetRankReq
{
	required string token    = 1 ; //令牌
	required int32  type     = 2 ; //排行类型 0:战神榜,1:富豪榜,2:对局榜
	required int32  sub_type = 3 ; //子类型
}

message RankItem
{
	required int32 user_id   	= 1 ; //用户id
	required string ip       	= 2 ; //用户ip
	required string location	= 3 ; //用户定位信息
	required string nickname 	= 4 ; //用户昵称
	required int32 sex       	= 5 ; //用户信别
	required string headurl  	= 6 ; //用户头像
	required string sign     	= 7 ; //用户签名
	required string agent    	= 8 ; //用户上级昵称
	required int64  compared 	= 9 ; //被比较的值

}

// ============================================================================================
// 
// 获取排行榜回复消息
// gate->user
// 
// ============================================================================================
message GetRankAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result    = 1 ; // 结果
	optional int32 type       = 2 ; // 排行类型
	optional int32 count 	  = 3 ; // 条数
	repeated RankItem items   = 4 ; // 排行信息
}

// ============================================================================================
// 
// 获取公告请求
// user->gate
// 
// ============================================================================================
message GetNotesReq
{
	required string token = 1 ; //令牌
	required int32 offset = 2 ; //偏移
	required int32 count  = 3 ; //数量
	required int32 gid    = 4 ; //游戏id:0是大厅
}

message NoteItem
{
	required string content = 1 ; //内容
}

// ============================================================================================
// 
// 获取公告回复消息
// gate->user
// 
// ============================================================================================
message GetNotesAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result    = 1 ; // 结果
	optional int32  gid       = 2 ; //游戏id
	optional int32  count     = 3 ; //信息条数
	repeated NoteItem items   = 4 ; //信息
}
// ============================================================================================
// 
// 充值核对请求
// user->gate
// 
// ============================================================================================
message CheckPaymentReq
{
	required string token = 1 ; //令牌
}

// ============================================================================================
// 
// 充值核对回复消息
// gate->user
// 
// ============================================================================================
message CheckPaymentAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result    = 1 ; // 结果
}

// ============================================================================================
// 
// 获取邮件请求
// user->gate
// 
// ============================================================================================
message GetEmailReq
{
	required string token = 1 ; //令牌
}

message EmailItem
{
	required string mail_id    = 1 ; //邮件id
	required string type       = 2 ; //邮件类型
	required string content    = 3 ; //邮件内容
	required string send_time  = 4 ; //发件时间
	required string attachment = 5 ; //附件
	required string title      = 6 ; //标题
	required string send_user  = 7 ; //发件人昵称
	required int32  status     = 8 ; //0：未读，1，已读
}

// ============================================================================================
// 
// 获取邮件回复消息
// gate->user
// 
// ============================================================================================
message GetEmailAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result    = 1 ; // 结果
	optional int32  count     = 3 ; //信息条数
	repeated EmailItem items  = 4 ; //信息
}

// ============================================================================================
// 
// 领取邮件附件请求
// user->gate
// 
// ============================================================================================
message GetAttachmentReq
{
	required string token = 1 ; //令牌
	required string mail_id = 2 ; //邮件id
}

// ============================================================================================
// 
// 领取邮件附件回复消息
// gate->user
// 
// ============================================================================================
message GetAttachmentAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result		= 1 ; // 结果
	optional int64 money     	 = 2 ; //金币
	optional string mail_id    	 = 3 ; //邮件id
}

// ============================================================================================
// 
// 获取商品列表请求
// user->gate
// 
// ============================================================================================
message ShopReq
{
	required string token = 1 ; //令牌
	required int32  goods_type = 2 ; //商品类型
}

//商品信息
message GoodsItem
{	
	required int32 	goods_id = 1 ; //商品id
	required int32 	goods_state = 2 ; //商品状态
	required string goods_name = 3 ; //商品名称
	required int32 	goods_price = 4 ; //商品价格
	required int32 	goods_gold = 5  ; //商品转换金币
	required string goods_comment = 6; //商品介绍
	required string goods_gift	= 7; //赠送物品(json格式)
}

// ============================================================================================
// 
// 获取商品列表回复消息
// gate->user
// 
// ============================================================================================
message ShopAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result    = 1 ; // 结果
	optional int32  pay_everyday = 2 ;//今日充值
	optional int32  pay_uplimit = 3 ; //每日充值上限
	optional int32  count = 4 ; //商品数量
	repeated GoodsItem goods = 5 ;	//商品信息
}

// ============================================================================================
// 
// 设置邮件已读请求
// user->gate
// 
// ============================================================================================
message SetEmailReadReq
{
	required string token = 1 ; //令牌
	required string mail_id = 2 ; //邮件id
}

// ============================================================================================
// 
// 设置邮件已读回复消息
// gate->user
// 
// ============================================================================================
message SetEmailReadAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result    = 1 ; // 结果
}

// ============================================================================================
// 
// 修改签名请求
// user->gate
// 
// ============================================================================================
message AlertSignReq
{
	required string token = 1 ; //令牌
	required string sign  = 2 ; //签名 
}

// ============================================================================================
// 
// 修改签名回复消息
// gate->user
// 
// ============================================================================================
message AlertSignAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result    = 1 ; // 结果
	optional string description  = 2 ; //签名 

}

// ============================================================================================
// 
// 获取游戏属性请求
// user->gate
// 
// ============================================================================================
message GetGameAttributeReq
{
	required string token = 1 ; //令牌
}
message GameAttributeItem
{
	required int32 gid 	  = 1 ; //游戏id
	required int32 online = 2 ; //在线人数
}
// ============================================================================================
// 
// 获取游戏属性回复消息
// gate->user
// 
// ============================================================================================
message GetGameAttributeAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result    = 1 ; // 结果
	optional int32  count     = 2 ; //属性个数
	repeated GameAttributeItem items = 3 ; // 属性信息
}

// ============================================================================================
// 
// 发送验证码请求
// user->gate
// 
// ============================================================================================
message SendCodeReq
{
	required string token = 1 ; //令牌
	required string phone = 2 ; //电话号码
}

// ============================================================================================
// 
// 发送验证码回复消息
// gate->user
// 
// ============================================================================================
message SendCodeAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result    = 1 ; // 结果
}

// ============================================================================================
// 
// 修改取款密码请求
// user->gate
// 
// ============================================================================================
message AlertSafePasswordReq
{
	required string token = 1 ; //令牌
	required string phone = 2 ; //
	required int32  code  = 3 ; // 
	required string pwd   = 4 ; //
}

// ============================================================================================
// 
// 修改取款密码回复消息
// gate->user
// 
// ============================================================================================
message AlertSafePasswordAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
		PHONE	   = 3 ;    //电话号码与邦定不一致
		CODE	   = 4 ;    //验证码错误
		EXPIRED    = 5 ;    //验证码过期
	}
	
	optional Result result    = 1 ; // 结果
}

// ============================================================================================
// 
// 获取系统配置请求
// user->gate
// 
// ============================================================================================
message GetSystemConfigReq
{
	required string token = 1 ; //令牌
}

// ============================================================================================
// 
// 获取系统配置回复消息
// gate->user
// 
// ============================================================================================
message GetSystemConfigAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result    = 1 ; // 结果
	optional string pay_support = 2 ; //支付支出
	optional string other     = 3 ; //其他设置
	
}

// ============================================================================================
// 
// 保存身份证请求
// user->gate
// 
// ============================================================================================
message SaveIDReq
{
	required string token   = 1 ; //令牌
	required string name    = 2 ; //真实姓名
	required string card_id = 3 ; //身份证
}

// ============================================================================================
// 
// 保存身份证回复消息
// gate->user
// 
// ============================================================================================
message SaveIDAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result    = 1 ; // 结果
}

// ============================================================================================
// 
// 读取身份证请求
// user->gate
// 
// ============================================================================================
message GetIDReq
{
	required string token = 1 ; //令牌
}

// ============================================================================================
// 
// 读取身份证回复消息
// gate->user
// 
// ============================================================================================
message GetIDAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result    = 1 ; // 结果
	optional string name      = 2 ; //真实姓名
	optional string card_id   = 3 ; //身份证
}

// ============================================================================================
// 
// 对局榜请求
// user->gate
// 
// ============================================================================================
message FightingRankReq
{
	required string token = 1 ; //令牌
}

// ============================================================================================
// 
// 对局榜回复消息
// gate->user
// 
// ============================================================================================
message FightingRankAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result    = 1 ; // 结果
}

// ============================================================================================
// 
// 申请代理请求
// user->gate
// 
// ============================================================================================
message RequestAgenceReq
{
	required string token    = 1 ; //令牌
	required int32  code     = 2 ; //验证码
	required string phone    = 3 ; //电话号码
	required string name     = 4 ; //姓名
	required string weixin   = 5 ; //微信号
	required string teahouse = 6 ; //茶馆
	required string region   = 7 ; //区域
	required string pwd      = 8 ; //密码
}

// ============================================================================================
// 
// 申请代理回复消息
// gate->user
// 
// ============================================================================================
message RequestAgenceAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result    = 1 ; // 结果
}

// ============================================================================================
// 
// 判断代理请求
// user->gate
// 
// ============================================================================================
message CheckAgenceReq
{
	required string token = 1 ; //令牌
}

// ============================================================================================
// 
// 判断代理回复消息
// gate->user
// 
// ============================================================================================
message CheckAgenceAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result    = 1 ; // 结果
	optional int32  is_agence = 2 ; //是否是代理
	optional string agence_url= 3 ; //代理url
}

// ============================================================================================
// 
// 获取客服信息请求
// user->gate
// 
// ============================================================================================
message GetCustomServiceReq
{
	required string token = 1 ; //令牌
}

// ============================================================================================
// 
// 获取客服信息回复消息
// gate->user
// 
// ============================================================================================
message GetCustomServiceAck
{	
	enum Result
	{
		OK         = 0 ;	// 成功
		FAILED     = 1 ;	// 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
	}
	
	optional Result result    = 1 ; // 结果
	optional int32  count     = 2 ; //客服个数
	repeated string custom    = 3 ; //客服信息
}

//请求快速开始
message QuickStartReq {
	required string token  = 1 ;   //令牌
	required int32  gid    = 2 ;   //游戏编号id
	required int32  kind   = 3 ;   //游戏类型
}
//响应快速开始
message QuickStartAck {
	enum Result
	{
		OK         = 0 ;	 // 成功
		FAILED     = 1 ;	 // 失败
		NEEDLOGIN  = 2 ;    //需要重新登陆
		SYSTEM_EORROR = 3;   // 系统错误
		NOTFOUND = 4;  // 找不到匹配房间
	}
	required Result  result  = 1; // 结果
	optional int32  gid      = 2; // 游戏编号
	optional int32  kind     = 3; // 游戏编号
	optional int32  roomid   = 4; // 房间编号
	optional string setup    = 5; // 房间json配置
}

//获取房间列表请求
message GetRoomListsReq
{
	required string token = 1 ; //令牌
	required int32  gid   = 2 ; //游戏id
	required int32  kind  = 3 ; //游戏类型:0--金币场，1--比赛场，2--房卡
	required int32  count = 4 ; //获取数量
	required int32  offset= 5 ; //偏移
}
//房间信息
message RoomItem
{
	required int32  roomid  = 1 ; //游戏类型
	required string setup   = 2 ; //json配置
	required int32  player  = 3 ; //
}
//获取房间列表响应
message GetRoomListsAck
{
	enum Result
	{
		OK         = 0 ;	 // 成功
		FAILED     = 1 ;	 // 失败
		NEEDLOGIN  = 2 ;     // 需要重新登陆
	}
	required Result result = 1 ;  // 结果
	optional int32  gid   = 2 ;  // 游戏id
	optional int32  kind  = 3 ;  // 游戏类型:0--金币场，1--比赛场，2--房卡
	optional int32  count = 4 ;  // 数量
	repeated RoomItem items = 5 ; //
}
//获取对局详细信息请求
message GetFightingDetialReq
{
	required string token = 1 ; //令牌
	required string fight_id = 2 ; //战绩id
}

message FightingDetial
{
	optional int64 amount = 1 ; //输赢金币
	optional int32 currency_type = 2 ; //货币类型
	optional string score = 3 ; //倍数
	optional string poker_type = 4 ; //牌型
	optional int32 strength = 5 ;	//实力积分
	optional int32 user_id = 6 ; 	//用户id
	optional string nickname = 7 ; 	//用户昵称 
	optional string headurl = 8 ;	//用户头像
	optional int32 status = 9;		//输赢状态:0-平手，1-赢家，2-输家

}

//获取对局详细信息响应
message GetFightingDetialAck
{
	enum Result
	{
		OK         = 0 ;	 // 成功
		FAILED     = 1 ;	 // 失败
		NEEDLOGIN  = 2 ;     // 需要重新登陆
	}
	required Result result = 1 ;  // 结果
	optional string fight_id = 2 ; //战绩id
	optional string fight_time = 3 ; //战绩开始时间
	optional int32 count = 4 ; //战绩人数
	repeated FightingDetial items = 5 ; //战绩信息
	optional string game_id = 6 ; //游戏id
	optional string setup = 7 ; //配置
}

//获取比赛列表请求
message GetMatchListReq
{
	required string 	token = 1 ; //令牌
	required string   	category = 2 ;//比赛类型
}
message MatchItem
{
    optional string name = 1 ;  //赛场名称
    optional string rewards = 2;//奖励，json格式
    optional string apply = 3;  //报名条件，json格式
    optional int32 need_count=4;//需求人数
    optional int32 fight_count=5;//需要对局数量
    optional int32 macth 		= 6; //比赛规则id
	optional string start_time 	= 7; //比赛开始时间,
	optional int32 peroid 		= 8; //周期,秒,为0表示非定时开赛类型
	optional int32 count 		= 9; //已报名人数
	optional int32 is_jion		= 10;//是否已经报名
	optional string descript    = 11;//比赛规则介绍
	optional string title    	= 12;//介绍
}
//获取比赛列表响应
message GetMatchListAck
{
    enum Result
	{
		OK         = 0 ;	 // 成功
		FAILED     = 1 ;	 // 失败
		NEEDLOGIN  = 2 ;     // 需要重新登陆
	}
	required Result result = 1 ;// 结果
    optional int32 gid = 2 ; //游戏id
    optional int32 count = 3 ;//条数
    repeated MatchItem items = 4 ; //比赛信息
}


//获取比赛录像请求
message GetFightingVideoReq
{
	required string token = 1    ; //令牌
	required string fight_id = 2 ; //战绩id
}

//获取比赛录像响应
message GetFightingVideoAck
{
	enum Result
	{
		OK         = 0 ;	 // 成功
		FAILED     = 1 ;	 // 失败
		NEEDLOGIN  = 2 ;     // 需要重新登陆
	}
	required Result result = 1 ;  // 结果
	optional string records = 2 ; //录像(json格式)
}


//获取奖品中心请求
message GetPrizeCenterReq
{
	required string token = 1 ; //令牌
}

message GetPrizeCenter
{
	required int32  goods_id = 1 ;  //商品id
	required string attrs =    2 ;  //商品属性(json格式)
	required string name  =    3 ;  //名字
	required int32  is_entity =4 ;   //是否是实物
}

//获取奖品中心响应
message GetPrizeCenterAck
{
	enum Result
	{
		OK         = 0 ;	 // 成功
		FAILED     = 1 ;	 // 失败
		NEEDLOGIN  = 2 ;     // 需要重新登陆
	}
	required Result result = 1 ;  		 // 结果
	optional int32  count = 2 ; 		 //数量
	repeated GetPrizeCenter  items = 3 ; //奖品信息
}


//兑换奖品请求
message UseItemReq
{
	required string token 	= 1 ; //令牌
	required int32  item_id = 2 ; //物品id
	required string goods   = 3 ; //物品属性里面goods值  
}


//兑换奖品响应
message UseItemAck
{
	enum Result
	{
		OK         = 0 ;	 // 成功
		FAILED     = 1 ;	 // 失败
		NEEDLOGIN  = 2 ;     // 需要重新登陆
		MONEY 	   = 3;	     //点券不足
		SHIPPING   = 4;		 //无收货地址 
	}
	required Result result = 1 ;  // 结果
	required int32 	coupon = 2 ;  // 剩余点券
}


//获取背包请求
message GetBagReq
{
	required string token = 1 ; //令牌
}


//获取背包响应
message GetBagAck
{
	enum Result
	{
		OK         = 0 ;	 // 成功
		FAILED     = 1 ;	 // 失败
		NEEDLOGIN  = 2 ;     // 需要重新登陆
	}
	required Result result 	= 1 ;  // 结果
	optional string bags 	= 2 ;  //背包信息(json格式)
}



//保存地址请求
message SaveShippingReq
{
	required string token = 1 ; //令牌
	required string name = 2 ; //姓名
	required string phone = 3 ; //电话
	required string address = 4 ; //地址
	required string zip_code = 5 ; //邮政地址
}


//保存地址响应
message SaveShippingAck
{
	enum Result
	{
		OK         = 0 ;	 // 成功
		FAILED     = 1 ;	 // 失败
		NEEDLOGIN  = 2 ;     // 需要重新登陆
	}
	required Result result 	= 1 ;  // 结果
}


//获取地址请求
message GetShippingReq
{
	required string token = 1 ; //令牌
}


//获取地址响应
message GetShippingAck
{
	enum Result
	{
		OK         = 0 ;	 // 成功
		FAILED     = 1 ;	 // 失败
		NEEDLOGIN  = 2 ;     // 需要重新登陆
	}
	required Result result 	= 1 ;  // 结果
	optional string name = 2 ; //姓名
	optional string phone = 3 ; //电话
	optional string address = 4 ; //地址
	optional string zipcode = 5 ; //邮政地址
}

//获取物品配置请求
message GetGoodsConfigReq
{
	required string token = 1 ; //令牌
}

message GoodsConfigItem
{
	optional string id 			= 1 ;	//物品id
	optional string attrs 		= 2;	//物品部分属性
	optional string name 		= 3 ;	//物品名字
	optional string json_key 	= 4 ;	//物品在Json配置中key名
}
//获取物品配置响应
message GetGoodsConfigAck
{
	enum Result
	{
		OK         = 0 ;	 // 成功
		FAILED     = 1 ;	 // 失败
		NEEDLOGIN  = 2 ;     // 需要重新登陆
	}
	required Result result 	= 1 ;  			//结果
	optional int32 count = 2 ;	 			//数量
	repeated GoodsConfigItem items = 3 ; 	//物品配置
}



//获取兑奖记录请求
message GetPrizeRecordReq
{
	required string token = 1 ; //令牌
}

message GetPrizeRecordData
{
	optional string user_name			= 1 ;	//兑奖人姓名
	optional string contents 			= 2;	//奖品信息(json格式)
	optional string create_time			= 3 ;	//兑换时间
	optional string osn 				= 4 ;	//订单号
	optional int32 state 				= 5 ;	//订单状态
}
//获取兑奖记录响应
message GetPrizeRecordAck
{
	enum Result
	{
		OK         = 0 ;	 // 成功
		FAILED     = 1 ;	 // 失败
		NEEDLOGIN  = 2 ;     // 需要重新登陆
	}
	required Result result 	= 1 ;  				//结果
	optional int32 count = 2 ;	 				//数量
	repeated GetPrizeRecordData items = 3 ; 	//兑奖信息
}

//获取玩家货币请求
message GetCurrencyReq
{
	required string token = 1 ; //令牌
}

message GetCurrencyAck
{
	enum Result
	{
		OK         = 0 ;	 // 成功
		FAILED     = 1 ;	 // 失败
		NEEDLOGIN  = 2 ;     // 需要重新登陆
	}
	required Result result 		= 1 ;  //结果
	optional int64 	money	 	= 2 ; //身上金币
	optional int32 	coupon    	= 3; //奖券
	optional int32 	coin      	= 4; //钻石
	optional int32 	match 		= 5; //比赛券
}


//获取活动中心请求
message  GetActivityCenterReq
{
	required string token = 1 ; //令牌
	required string kind  = 2 ; //类型
}

message GetActivityCenterData
{
	optional string  title 			= 1; //标题
	optional string  create_time 	= 2; //开始时间
	optional string  end_time 		= 3; //结束时间
	optional string  rewards		= 4; //奖品(json格式)
	optional string  description 	= 5; //描述
	optional string  condition 		= 6; //条件(json格式)
}
//获取活动中心响应
message GetActivityCenterAck
{
	enum Result
	{
		OK         = 0 ;	 // 成功
		FAILED     = 1 ;	 // 失败
		NEEDLOGIN  = 2 ;     // 需要重新登陆
	}
	required Result result 					= 1 ;	//结果
	optional int32 count 					= 2 ;	//数量
    repeated GetActivityCenterData data 	= 3 ; 	//活动信息
}


//获取玩家信息请求
message  GetUserDataReq
{
	required string token 	= 1 ; //令牌
	required string user_id  = 2 ; //用户id
}

//获取玩家信息响应
message GetUserDataAck
{
	enum Result
	{
		OK         = 0 ;	 // 成功
		FAILED     = 1 ;	 // 失败
		NEEDLOGIN  = 2 ;     // 需要重新登陆
	}
	required Result result 			= 1 ; //结果
	optional string nickname 		= 2 ; //昵称
	optional string wxheadurl 		= 3 ; //头像
	optional int32  sex    	  		= 4 ; //性别															
	optional string userid    		= 5; //用户id
	optional string remote_ip 		= 6; //ip
	optional string name 			= 7; //真实姓名
	optional string wxid      		= 8; //微信id
	optional int32 money      		= 9; //金币
	optional int32 coupon     		= 10; //奖券
	optional int32 playing_time 	= 11; //游戏时长
	optional int32 win_gold 		= 12; //累积赢得金币
	optional int32 match 			= 13; //比赛券
	optional int32 charm 			= 14; //魅力值
	optional int32 dissolute 		= 15; //风流值
	optional int32 level			= 16; //等级积分
	optional int32 strength 		= 17; //实力积分
	optional string description 	= 18; //个性签名  
}


//获取小贴士请求
message  GetJokeReq
{
	required string token 	= 1 ; //令牌
	required int32 	id 		= 2 ; //id
}

//获取小贴士响应
message GetJokeAck
{

	enum Result
	{
		OK         = 0 ;	 // 成功
		FAILED     = 1 ;	 // 失败
		NEEDLOGIN  = 2 ;     // 需要重新登陆
	}

	required Result result 			= 1 ; //结果
	optional string title 			= 2 ; //标题
	optional string content 		= 3 ; //内容
	optional int32 	id 				= 4 ; //返回id
}


//获取在线人数请求
message GetOnLineCountReq
{
	required string token 	= 1 ; //令牌
}

//获取在线人数响应
message  GetOnLineCountAck
{
	enum Result
	{
		OK         = 0 ;	 // 成功
		FAILED     = 1 ;	 // 失败
		NEEDLOGIN  = 2 ;     // 需要重新登陆
	}

	required Result result 			= 1 ; //结果
	optional int32 count 			= 2 ; //在线人数在线人数
}






//广播消息
message BroadcastNtf
{
	repeated uint32 user_ids 	= 1 ; //用户id,如果数组不为空,表示只向这些人发送,否则全局广播
	optional string message     = 2 ; //消息,json格式
}

//用户下线通知消息
message UserOfflineNtf
{
	optional uint64 usertoken 	= 1 ; //用户令牌信息
	optional uint64 roomid      = 2 ; //房间id
}

//平台请求
message PlatReq
{
	optional string info 		= 1; //json格式
}
//平台响应
message PlatAck
{
	optional string info 		= 1; //json格式
}
//最新事件请求
message LastEventsReq
{
	required string token 	= 1 ; //令牌
}
//最新事件响应
message LastEventsAck
{
	enum Result
	{
		OK         = 0 ;	 // 成功
		FAILED     = 1 ;	 // 失败
		NEEDLOGIN  = 2 ;     // 需要重新登陆
	}

	required Result result 			= 1 ; // 结果
	repeated string event			= 2 ; // json格式
}