syntax = "proto2";

package game_common ;

//============================================================== 
// 这里定义的是一些游戏通用的结构和枚举
//==============================================================
//游戏中玩家信息
message TablePlayerInfo {
	required string nickname = 1 [default = ""];
	required string wxheadurl = 2 [default = ""];
    required int32  sex = 3 [default = 0]; //1 表示男， 2 表示女
    required string ip = 4 [default = ""]; //ip地址
    required uint64 userid = 5   [default = 0]; //玩家用户信息
    optional int64  money = 6; //玩家金币
}

//游戏中座位信息
message SeatInfo {
	required uint64 userid = 1 [default = 0]; //用户id
	required int32 seat_id = 2 [default = 0]; //座位号

	//座位状态
	//ESeatState={
	//	SEAT_STATE_UNKNOW = 0,  --未被使用
	//	SEAT_STATE_WAIT_READY = 1, --等待玩家准备
	//	SEAT_STATE_WAIT_START = 2, --等待开始（已经准备）
	//	SEAT_STATE_WAIT_NEXT_ONEGAME = 3, --等待下一局
	//	SEAT_STATE_PLAYING = 4,    --在游戏中
	//}
	optional int32 state = 3;
	optional bool  islookon = 4;//是否观战（相当于在座位上等待下一局）true表示是 false表示否
	optional bool isready = 5;  //是否已经准备 true表示是 false 表示否
	optional TablePlayerInfo player = 6; //玩家基本信息
}

//桌子信息
message TableInfo {
	optional int32  gameid = 1;   //游戏编号
	optional uint64 tableid = 2;  //桌子编号
	optional int32  roomid = 3; //创建房间（朋友桌房号）号
	optional int32  state = 4; //table state
	optional string name = 5; //桌子名字
	optional int32  room_type = 6; //房间类型
	optional int32  max_player_num = 7;   //房间支持的最大人数
	optional int32  cur_player_num = 8;   //状态服务器
	optional int32  retain_to_time = 9;   //桌子保留到的时间(linux时间擢)
	optional int32  retain_to_num = 10;    //游戏保留局数
	optional int32  curr_to_num = 11;     //游戏当前已经进行了的局数
	optional int32  create_userid = 12;  //创建者id
	optional string create_nickname = 13; //创建者姓名
	optional int32  create_time = 14;      //桌子的创建时间
	optional string create_wxheadurl = 15;
	optional int32  service_charge = 16;  //服务费
	optional string gamecfg = 17;         //房间配置 json串格式
}
//========================================================



